
https://www.w3resource.com/mongodb-exercises/#MongoDB_restaurants
-- sample_restaurants/restaurants --

#1
db.restaurants.find()

#2
db.restaurants.find({}, { "restaurant_id": 1, "name": 1, "borough": 1, "cuisine": 1})

#3
db.restaurants.find({}, { "_id":0, "restaurant_id": 1, "name": 1, "borough": 1, "cuisine": 1})

#4
db.restaurants.find({}, { "_id":0, "restaurant_id": 1, "name": 1, "borough": 1, "address.zipcode": 1})

#5
db.restaurants.find({"borough": "Bronx" })

#6
db.restaurants.find({"borough": "Bronx" }).limit(5)

#7
db.restaurants.find({"borough": "Bronx"}).skip(5).limit(5);

#8
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 80 }}}})

#9
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 80, $lt: 100 }}}}) searches for atleast one score lt 100 and gt 80

nb - db.restaurants.find({ "grades.score": {$gt : 101, $lt: 100 } } ) searches for any restaurant which has at least one score gt 80 and at least one score lt 100

#10
db.restaurants.find({"address.coord" : {$lt : -95.754168}})

#11 / 12 
db.restaurants.find({ "cuisine" : {$ne :"American"}, "grades.score" : {$gt : 70}, "address.coord" : {$lt : -65.754168} })
db.restaurants.find( {$and: [{"cuisine" : {$ne :"American "}}, {"grades.score" : {$gt : 70}}, {"address.coord" : {$lt : -65.754168}} ] });

#13
db.restaurants.find({ cuisine : {$ne :"American"}, borough : { $ne:"Brooklyn"}, "grades.grade" : "A" }).sort({cuisine:-1})

#14
db.restaurants.find( {name: /^Wil/}, { restaurant_id : 1, name:1, borough :1, cuisine :1 })

#15
db.restaurants.find( {name: /ces$/}, { restaurant_id : 1, name:1, borough :1, cuisine :1 })

#16
db.restaurants.find( {name: /.*Reg.*/ }, { restaurant_id : 1, name:1, borough :1, cuisine :1 })

#17
db.restaurants.find({ borough: "Bronx" , $or : [{ cuisine : "American" }, { cuisine : "Chinese" }]  })

#18
db.restaurants.find({  $or : [ { borough: "Staten Island"}, { borough: "Queens"}, { borough: "Bronx"},{borough:"Brooklyn"} ]  },{ restaurant_id:1, name:1, borough:1, cuisine:1} )

#19
db.restaurants.find( { borough: {$nin: [ "Staten Island", "Queens", "Bronx", "Brooklyn" ] }})

#20
db.restaurants.find( {"grades.score" : {$lte : 10} }, { "restaurant_id" : 1, "name":1, "borough":1, cuisine: 1})

#21
db.restaurants.find( 
{$or:[
      {name: /^Wil/}, 
      {"$and":[{"cuisine" : {$ne :"American"}}, {"cuisine" : {$ne :"Chinese"}} ]}
    ]
},
{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1}
)

#22

db.restaurants.find({grades : { $elemMatch: {$and: [ {score: 11 }, {grade: "A" }, { "date": ISODate("2014-08-11T00:00:00Z")} ] }}})
or
db.restaurants.find({ grades : { $elemMatch: {$and: [ {score: 11 }, { "date": ISODate("2014-08-11T00:00:00Z")} ] }}})
// as score 11 wiil bring grade "A" by default

#23
db.restaurants.find( 
                      { 
			"grades.1.date": ISODate("2014-08-11T00:00:00Z"), 
                        "grades.1.grade":"A",
                        "grades.1.score" : 9
                      }, 
                       {"restaurant_id" : 1,"name" : 1, "grades" :1}
                   );


#24
db.restaurants.find( 
                      { "address.coord.1": {$gt : 42, $lte : 52} },
                      { "restaurant_id" : 1,"name":1,"address":1,"coord":1}
                   );


#25
db.restaurants.find({}, {name:1, _id:0} ).sort({name:1})

#26
db.restaurants.find({}, {name:1, _id:0} ).sort({name:-1})

#27
db.restaurants.find( ).sort({ cuisine:1, borough: -1 })

#28
db.restaurants.find( {"address.street" : { $exists : false }}  );

#29
db.restaurants.find( {"address.coord" : {$type : 1} });

#30
db.restaurants.find( {"grades.score" : {$mod : [7,0]}}, {"restaurant_id" : 1,"name":1,"grades":1} );

#31
db.restaurants.find( { name: { $regex: ".*mon.*", $options: "i" } }, { "name": 1, "borough": 1, "address.coord": 1, "cuisine": 1 } );

#32
db.restaurants.find( { name: { $regex: "^Mad" }}, { "name": 1, "borough": 1, "address.coord": 1, "cuisine": 1 } );

#33
db.restaurants.find( {"grades.score" : {$lt : 5} });

#34
db.restaurants.find( {"grades.score" : {$lt : 5}, borough: "Manhattan" });

#35
db.restaurants.find( {"grades.score" : {$lt : 5}, borough: {$in :["Manhattan", "Brooklyn"]} });

#36
db.restaurants.find( {"grades.score" : {$lt : 5}, borough: {$in :["Manhattan", "Brooklyn"]}, cuisine: {$nin: ["American"]} });

#37
db.restaurants.find( {"grades.score" : {$lt : 5}, borough: {$in :["Manhattan", "Brooklyn"]}, cuisine: {$nin: ["American", "Chinese"]} });

#38
db.restaurants.find( { $and: [ {"grades.score" : 2}, {"grades.score": 6}] });

not db.restaurants.find({"grades.score" : 2, "grades.score": 6 }); 

#39
db.restaurants.find( { $and: [ {"grades.score" : 2}, {"grades.score": 6}, {borough: "Manhattan"}] });

#40
db.restaurants.find( { $and: [ {"grades.score" : 2}, {"grades.score": 6}, { $or : [{borough: "Manhattan"}, {borough: "Brooklyn"}] }] });

#41
db.restaurants.find( { $and: [ {"grades.score" : 2}, {"grades.score": 6}, { $or : [{borough: "Manhattan"}, {borough: "Brooklyn"}] }, { cuisine: {$ne: "American" }} ] });

#42
db.restaurants.find( { $and: [ {"grades.score" : 2}, {"grades.score": 6}, { $or : [{borough: "Manhattan"}, {borough: "Brooklyn"}] }, { cuisine: {$nin: ["American", "Chinese"] }} ] });

#43
db.restaurants.find(   {    $or: [{ "grades.score": 2 }, { "grades.score": 6 } ]})

#44
db.restaurants.find({ $and: [  {$or: [{ "grades.score": 2 }, { "grades.score": 6 } ]}, { borough: "Manhattan" }] })

#45
db.restaurants.find({ $and: [  {$or: [{ "grades.score": 2 }, { "grades.score": 6 } ]}, {$or: [{borough: "Manhattan"}, {borough: "Brooklyn"}]} ]    })

#46
db.restaurants.find({ $and: [  {$or: [{ "grades.score": 2 }, { "grades.score": 6 } ]}, {$or: [{borough: "Manhattan"}, {borough: "Brooklyn"}]}, {cuisine:{$ne:"American"}} ]    })

#47
db.restaurants.find({ $and: [  {$or: [{ "grades.score": 2 }, { "grades.score": 6 } ]}, {$or: [{borough: "Manhattan"}, {borough: "Brooklyn"}]}, {cuisine:{$nin:["American" , "Chinese" ]}} ]    })

#48
db.restaurants.find(  {"grades": {"$not": {"$elemMatch": {"score": {"$lte": 5}}}}})

#49
db.restaurants.find( { $and: [ {borough: "Manhattan"} , {"grades": {"$not": {"$elemMatch": {"score": {"$lte": 5}}}}} ] })

#50
db.restaurants.find( { $and: [ { $or: [ {borough: "Manhattan"}, {borough: "Brooklyn"}] } , {"grades": {"$not": {"$elemMatch": {"score": {"$lte": 5}}}}} ] })

#51
db.restaurants.aggregate([  { $unwind: "$grades"},  { $group: {_id: "$name", avgScore: {$avg: "$grades.score"}}}  ])

#52
db.restaurants.aggregate([  { $unwind: "$grades"},  { $group: {_id: "$name", avgScore: {$avg: "$grades.score"}}}  ])






















